#!/usr/bin/env elixir

if not File.exists?(".env") do
  IO.puts("Please create a .env file at the root of the project.")
  IO.puts("See .example.env for an example.")
  System.halt(1)
end

alias Harvester.Modules.Harvest

alias Harvester.Helpers.Date

env = Dotenv.load!() |> then(& &1.values)

if is_nil(env["HARVEST_ACCOUNT_ID"]) or is_nil(env["HARVEST_API_TOKEN"]) do
  IO.puts("Please set HARVEST_ACCOUNT_ID and HARVEST_API_TOKEN in your .env file.")
  System.halt(1)
end

%{"HARVEST_ACCOUNT_ID" => account_id, "HARVEST_API_TOKEN" => api_token} = env
auth = %{account_id: account_id, api_token: api_token}

user = Harvest.get_authenticated_user!(auth)

IO.puts("Hello, #{user.first_name} #{user.last_name} (#{user.id})!")

{first_day, last_day} = Date.get_current_month_range()

total_hours =
  auth
  |> Harvest.list_time_entries!(from: first_day, to: last_day, user_id: user.id)
  |> Enum.map(& &1.hours)
  |> Enum.sum()

IO.puts("You worked #{total_hours} hours this month.")
